{"version":3,"file":"component---src-pages-components-accordion-mdx-b99bb84dce374b96013b.js","mappings":"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","sources":["webpack://ibm-fusion/./src/pages/components/Accordion.mdx","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/benrandall/Documents/Code/ibm-fusion/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst AccordionItem = makeShortcode(\"AccordionItem\");\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`<Accordion>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<AccordionItem>`}</inlineCode>{` components are used together to display\na list of content sections that can be toggled open by clicking the respective\ntitle of each section.`}</p>\n    </PageDescription>\n    <h2>{`Example`}</h2>\n    <Accordion mdxType=\"Accordion\">\n      <AccordionItem title=\"Title 1\" mdxType=\"AccordionItem\">\n        <p>{`In ac nisi ut mauris venenatis blandit a et ante. Mauris eu congue velit, eget\ndictum diam. Etiam sed turpis quis ligula interdum lobortis eu et libero.\nPraesent nec eros sit amet elit tempor egestas cursus non nulla. Vestibulum\ndictum luctus lorem in rhoncus.`}</p>\n        <p>{`Nullam vestibulum blandit libero, ac tempus felis tristique id. Aliquam rhoncus\nvestibulum dui eu dictum. Morbi congue purus eu libero sodales, nec sollicitudin\nligula tempor.`}</p>\n        <ul>\n          <li parentName=\"ul\">{`list item`}</li>\n          <li parentName=\"ul\">{`list item`}</li>\n          <li parentName=\"ul\">{`list item`}</li>\n        </ul>\n      </AccordionItem>\n  <AccordionItem title=\"Title 2\" mdxType=\"AccordionItem\">Content Section</AccordionItem>\n  <AccordionItem title=\"Title 3\" mdxType=\"AccordionItem\">Content Section</AccordionItem>\n    </Accordion>\n    <h2>{`Code`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-mdx\",\n        \"metastring\": \"path=components/Accordion/Accordion.js src=https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/Accordion\",\n        \"path\": \"components/Accordion/Accordion.js\",\n        \"src\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/tree/main/packages/gatsby-theme-carbon/src/components/Accordion\"\n      }}>{`<Accordion>\n  <AccordionItem title=\"Title 1\">Content Section</AccordionItem>\n  <AccordionItem title=\"Title 2\">Content Section</AccordionItem>\n  <AccordionItem title=\"Title 3\">Content Section</AccordionItem>\n</Accordion>\n`}</code></pre>\n    <h3>{`Props`}</h3>\n    <Title mdxType=\"Title\">Accordion</Title>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`propType`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pass in the children that will be rendered within the Accordion`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specify an optional className to be applied to the container node`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <Title mdxType=\"Title\">AccordionItem</Title>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`propType`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`title`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`‘title’`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The accordion title`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`renderExpando`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`props => <button {…props} />`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The callback function to render the expando button. Can be a React component class.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`iconDescription`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`‘Expand/Collapse’`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The description of the expando icon`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`open`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`bool`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` to open the expando`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onClick`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => {}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The handler of the massaged `}<inlineCode parentName=\"td\">{`click`}</inlineCode>{` event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onHeadingClick`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`func`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => {}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The handler of the massaged `}<inlineCode parentName=\"td\">{`click`}</inlineCode>{` event on the heading.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`node`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provide the contents of your AccordionItem`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specify an optional className to be applied to the container node`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","Accordion","AccordionItem","Title","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","title","isMDXComponent","theme","tabs","React","className","cx","length","id","relativePagePath","repository","repositoryProp","site","siteMetadata","useStaticQuery","baseUrl","subDirectory","branch","href","PageTabs","_React$Component","apply","arguments","_inheritsLoose","prototype","render","slug","this","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","date","lastModified","Date","Row","Column","toLocaleDateString","day","year","month","pageContext","children","location","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}