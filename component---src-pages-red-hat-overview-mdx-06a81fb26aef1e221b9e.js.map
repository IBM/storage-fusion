{"version":3,"file":"component---src-pages-red-hat-overview-mdx-06a81fb26aef1e221b9e.js","mappings":"gTAQaA,EAAe,CAAC,EACvBC,EAAgBC,GAAQ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,IAAA,MAASH,EAClB,EACMI,EAAkBN,EAAc,mBAChCO,EAAMP,EAAc,OACpBQ,EAASR,EAAc,UACvBS,EAAc,CAClBV,gBAEIW,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG9B,IAH+B,WACjCC,GAEDD,EADIX,GAAKa,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOX,EAAAA,EAAAA,IAACK,EAASO,OAAAC,OAAA,GAAKT,EAAiBP,EAAK,CAAEY,WAAYA,EAAYK,QAAQ,eAI5Ed,EAAAA,EAAAA,IAACC,EAAe,CAACa,QAAQ,oBACvBd,EAAAA,EAAAA,IAAA,+VAEFA,EAAAA,EAAAA,IAACE,EAAG,CAACa,UAAWC,EAAAA,GAAmBF,QAAQ,QACzCd,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAACmB,EAAAA,IAAU,CAAC,aAAW,iBAAiBJ,UAAU,kBAAkBD,QAAQ,iBAE9Ed,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAAA,iDACAA,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,UAAQoB,WAAW,KAAG,uFAAiG,2SAC1HpB,EAAAA,EAAAA,IAAA,yWACAA,EAAAA,EAAAA,IAAA,kPAGJA,EAAAA,EAAAA,IAACE,EAAG,CAACa,UAAWC,EAAAA,GAAmBF,QAAQ,QACzCd,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAACqB,EAAAA,IAAc,CAAC,aAAW,iBAAiBN,UAAU,kBAAkBD,QAAQ,qBAElFd,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAAA,uCACAA,EAAAA,EAAAA,IAAA,yMAAmMA,EAAAA,EAAAA,IAAA,UAAQoB,WAAW,KAAG,+EAAyF,6RAClTpB,EAAAA,EAAAA,IAAA,wWAGJA,EAAAA,EAAAA,IAACE,EAAG,CAACa,UAAWC,EAAAA,GAAmBF,QAAQ,QACzCd,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAACsB,EAAAA,IAA6B,CAAC,aAAW,gBAAgBP,UAAU,kBAAkBD,QAAQ,oCAEhGd,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAAA,mCACAA,EAAAA,EAAAA,IAAA,UAAGA,EAAAA,EAAAA,IAAA,UAAQoB,WAAW,KAAG,0GAAoH,wSAC7IpB,EAAAA,EAAAA,IAAA,wOAGJA,EAAAA,EAAAA,IAACE,EAAG,CAACa,UAAWC,EAAAA,GAAmBF,QAAQ,QACzCd,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAACuB,EAAAA,IAA0B,CAAC,aAAW,2BAA2BR,UAAU,kBAAkBD,QAAQ,iCAExGd,EAAAA,EAAAA,IAACG,EAAM,CAACc,MAAO,EAAGC,MAAO,EAAGJ,QAAQ,WAClCd,EAAAA,EAAAA,IAAA,0CACAA,EAAAA,EAAAA,IAAA,sHAAgHA,EAAAA,EAAAA,IAAA,UAAQoB,WAAW,KAAG,8GAAwH,gHAC9PpB,EAAAA,EAAAA,IAAA,wRAKR,CAEAO,EAAWiB,gBAAiB,C,wIC9C5B,IC5BA,EDGmBhB,IAAA,IAAC,MAAEiB,EAAK,MAAEC,EAAK,KAAEC,EAAO,IAAInB,EAAA,OAC7CoB,EAAAA,cAAA,OACEb,UAAWc,IEHS,wCFGa,CAC/B,sCAAmBF,EAAKG,OACxB,sCAA6B,SAAVJ,KAErBE,EAAAA,cAAA,OAAKb,UAAU,YACba,EAAAA,cAAA,OAAKb,UAAU,WACba,EAAAA,cAAA,OAAKb,UAAU,iBACba,EAAAA,cAAA,MAAIG,GAAG,aAAahB,UETZ,kCFULU,MAKL,EG6BR,IC/CA,EDIiBjB,IAAuD,IAAtD,iBAAEwB,EAAkBC,WAAYC,GAAgB1B,EAChE,MACE2B,MACEC,cAAc,WAAEH,MAEhBI,EAAAA,EAAAA,gBAAe,eAcb,QAAEC,EAAO,aAAEC,EAAY,OAAEC,GAAWN,GAAkBD,EAEtDQ,EAAUH,EAAO,SAASE,EAASD,EAAY,aAAaP,EAElE,OAAOM,EACLV,EAAAA,cAAA,OAAKb,UAAS,uCACZa,EAAAA,cAAA,OAAKb,UAAU,WACba,EAAAA,cAAA,KAAGb,UE7BO,+BF6BU0B,KAAMA,GAAM,8BAKlC,IAAI,E,mBGzBsB,IAEXC,EAAQ,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAkC1B,OAlC0BC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAC3BC,OAAA,WACE,MAAM,MAAEvB,EAAK,KAAEE,EAAI,KAAEsB,GAASC,KAAKrD,MAC7BsD,EAAaF,EAAKG,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,GAEvDC,EAAW7B,EAAK8B,KAAKC,IACzB,MAAMC,EAAeC,IAAQF,EAAK,CAAEG,OAAO,EAAMC,QAAQ,IACnDC,EAAWJ,IAAiBR,EAG5Ba,EAAkB,IAAIC,OAAUd,EAAU,aAC1CV,EAAOQ,EAAKiB,QAAQF,EAAiBL,GAC3C,OACE/B,EAAAA,cAAA,MAAIuC,IAAKT,EAAK3C,UAAWc,IAAG,CAAE,wCAAgBkC,GCtBhC,sCDuBZnC,EAAAA,cAACwC,EAAAA,KAAI,CAACrD,UCzBE,+BDyBesD,GAAE,GAAK5B,GAC3BiB,GAEA,IAIT,OACE9B,EAAAA,cAAA,OAAKb,UC7BgB,0CD8BnBa,EAAAA,cAAA,OAAKb,UAAU,YACba,EAAAA,cAAA,OAAKb,UAAU,WACba,EAAAA,cAAA,OAAKb,UAAU,mCACba,EAAAA,cAAA,OAAK,aAAYH,GACfG,EAAAA,cAAA,MAAIb,UCrCF,gCDqCoByC,OAOpC,EAACd,CAAA,CAlC0B,CAASd,EAAAA,WEZtC,Q,6BCsBA,ICtBA,EDEyBpB,IAAe,IAAd,KAAE8D,GAAM9D,EAChC,MAMM+D,EAAe,IAAIC,KAAKF,GAE9B,OAAOA,EACL1C,EAAAA,cAAC1B,EAAAA,GAAG,CAACa,UEXQ,yCFYXa,EAAAA,cAACzB,EAAAA,GAAM,KACLyB,EAAAA,cAAA,OAAKb,UEZK,0CFYmB,sBACPwD,EAAaE,mBAAmB,QAZ5C,CACdC,IAAK,UACLC,KAAM,UACNC,MAAO,YAcL,IAAI,EGyEV,MAjFgBpE,IAAiD,IAAhD,YAAEqE,EAAW,SAAEC,EAAQ,SAAEC,EAAQ,MAAEC,GAAOxE,EACzD,MAAM,YAAEyE,EAAc,CAAC,EAAC,iBAAEjD,EAAgB,UAAEkD,GAAcL,GACpD,KACJlD,EAAI,MACJF,EACAC,MAAOyD,EAAgB,YACvBC,EAAW,SACXC,EAAQ,KACRf,GACEW,GAEE,cAAEK,IAAkBC,EAAAA,EAAAA,MAIxBpD,MAAM,WAAEqD,KACNnD,EAAAA,EAAAA,gBAAe,cASbY,EAAOuC,EACTT,EAASU,SAASvB,QAAQsB,EAAY,IACtCT,EAASU,SAUPtC,EAPCxB,EAEHsB,EAAKG,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CK,IAAQjC,EAAK,GAAI,CAAEkC,OAAO,IAHV,GASdnC,EAAQyD,GAAoBG,EAElC,OACE1D,EAAAA,cAAC8D,EAAAA,EAAM,CACL/D,KAAMA,EACNgE,UAAU,EACVjE,MAAOA,EACPkE,UAAWnE,EACXoE,gBAAiBT,EACjBU,aAAcT,EACdH,UAAWA,GACXtD,EAAAA,cAACmE,EAAU,CACTtE,MAAOuD,EAAQpD,EAAAA,cAACoD,EAAK,MAAMvD,EAC3BuE,MAAM,QACNrE,KAAMA,EACND,MAAOA,IAERC,GACCC,EAAAA,cAACc,EAAQ,CACPjB,MAAOA,EACPwB,KAAMA,EACNtB,KAAMA,EACNwB,WAAYA,IAGhBvB,EAAAA,cAACqE,EAAAA,EAAI,CAACC,QAAM,GACTpB,EACDlD,EAAAA,cAACuE,EAAQ,CAACnE,iBAAkBA,IAC5BJ,EAAAA,cAACwE,EAAgB,CAAC9B,KAAMA,KAE1B1C,EAAAA,cAACyE,EAAAA,EAAY,CACXxB,YAAaA,EACbE,SAAUA,EACV9B,KAAMA,EACNtB,KAAMA,EACNwB,WAAYA,IAEdvB,EAAAA,cAAC0E,EAAAA,EAAK,MACC,C","sources":["webpack://ibm-fusion/./src/pages/red-hat/overview.mdx","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/benrandall/Documents/Code/ibm-fusion/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { principlesSection } from '../../styles/Grid.module.scss';\nimport { CloudInfrastructureManagement, ManageApplicationsAnywhere, ServerRack, Virtualization } from '@carbon/pictograms-react';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`IBM Fusion is built to integrate with the Red Hat OpenShift ecosystem.  Fusion is built as a collection of operators, enabling data services to be orchestrated in an “as code” fashion.  Fusion leverages a number of Red Hat technologies in order to build solutions for easily managing clusters, container workloads, and virtual machines.`}</p>\n    </PageDescription>\n    <Row className={principlesSection} mdxType=\"Row\">\n      <Column colMd={1} colLg={1} mdxType=\"Column\">\n        <ServerRack aria-label=\"Hyperconverged\" className=\"my-custom-class\" mdxType=\"ServerRack\" />\n      </Column>\n      <Column colMd={6} colLg={8} mdxType=\"Column\">\n        <h2>{`Hyper-converged OpenShift platform`}</h2>\n        <p><strong parentName=\"p\">{`Fusion HCI is a hyper-converged appliance for implementing OpenShift on bare metal.`}</strong>{`   You can think of it as “OpenShift in a box”.  The appliance consists of bare metal worker nodes, storage, and switches - plus optional GPUs for AI and machine learning workloads.  This isn’t just a reference architecture - installing Fusion HCI provides a fully functional OpenShift cluster.`}</p>\n        <p>{`Everything is built with high availability in mind.  Networking is fully redundant throughout the appliance.  Proven software defined storage architectures ensures that workloads won’t lose access to their data in the event of the loss of drives or storage nodes.  Backup and disaster recovery are built into the platform and managed as operators.`}</p>\n        <p>{`In fact, it’s all built as operators.  The entire management stack for Fusion HCI is container native and can be managed “as code”.  And that’s important when you’re not just dealing with a single appliance, but a whole fleet.`}</p>\n      </Column>\n    </Row>\n    <Row className={principlesSection} mdxType=\"Row\">\n      <Column colMd={1} colLg={1} mdxType=\"Column\">\n        <Virtualization aria-label=\"Virtualization\" className=\"my-custom-class\" mdxType=\"Virtualization\" />\n      </Column>\n      <Column colMd={6} colLg={8} mdxType=\"Column\">\n        <h2>{`OpenShift Virtualization`}</h2>\n        <p>{`As the industry shifts towards containerization, it’s common to still see the need for virtual machines.  There may be some middleware that realistically isn’t going to be containerized.  `}<strong parentName=\"p\">{`Fusion HCI provides a platform for running containers and VMs side by side.`}</strong>{`  That removes the need to maintain two separate infrastructure stacks, and the skills that go with them.  With OpenShift Virtualization, VMs can be managed as just another Kubernetes resource, which is powerful when you consider gitops and “as code” capabilities of the platform.`}</p>\n        <p>{`Of course, you need a lot more than just the ability to host virtual machines.  You need vm mobility, backup and restore, and other capabilities offered by traditional platforms.  OpenShift Virtualization and Fusion have that covered.  Live Migration handles mobility, and Fusion provides built in capabilities for backing up and restoring VMs.`}</p>\n      </Column>\n    </Row>\n    <Row className={principlesSection} mdxType=\"Row\">\n      <Column colMd={1} colLg={1} mdxType=\"Column\">\n        <CloudInfrastructureManagement aria-label=\"Multi-cluster\" className=\"my-custom-class\" mdxType=\"CloudInfrastructureManagement\" />\n      </Column>\n      <Column colMd={6} colLg={8} mdxType=\"Column\">\n        <h2>{`Hosted control plane`}</h2>\n        <p><strong parentName=\"p\">{`Hosted Control Plane is a Red Hat technology that transforms Fusion HCI into a private cloud in a box.`}</strong>{`  Carve up the appliance into multiple OpenShift clusters, each right-sized for their workloads.  Provision clusters on demand, providing them with data services such as storage and backup.  When clusters are no longer needed, decommission them and free up resources for future provisioning.`}</p>\n        <p>{`Hosted Control Plane also provides infrastructure efficiency.  The control plane of each cluster you create is hosted as pods in a hub cluster, meaning you don’t need to dedicate three control nodes for each cluster.`}</p>\n      </Column>\n    </Row>\n    <Row className={principlesSection} mdxType=\"Row\">\n      <Column colMd={1} colLg={1} mdxType=\"Column\">\n        <ManageApplicationsAnywhere aria-label=\"Multi-cluster management\" className=\"my-custom-class\" mdxType=\"ManageApplicationsAnywhere\" />\n      </Column>\n      <Column colMd={6} colLg={8} mdxType=\"Column\">\n        <h2>{`Advanced Cluster Management`}</h2>\n        <p>{`Red Hat Advanced Cluster Management (ACM) allows you to manage a fleet of clusters from single console.  `}<strong parentName=\"p\">{`It’s the tool that you’ll use to carve Fusion HCI into multiple clusters, provisioning clusters on demand.`}</strong>{`  Simply specify how many nodes you need and the CPU and memory requirements, and a new cluster is created.`}</p>\n        <p>{`ACM goes well beyond a central control plane for your clusters.  It also provides centralized management of applications across the clusters.  Simply create a subscription to a git repository, and you can deploy the corresponding app to any of the managed clusters.`}</p>\n      </Column>\n    </Row>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","Row","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","className","principlesSection","colMd","colLg","ServerRack","parentName","Virtualization","CloudInfrastructureManagement","ManageApplicationsAnywhere","isMDXComponent","title","theme","tabs","React","cx","length","id","relativePagePath","repository","repositoryProp","site","siteMetadata","useStaticQuery","baseUrl","subDirectory","branch","href","PageTabs","_React$Component","apply","arguments","_inheritsLoose","prototype","render","slug","this","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}