{"version":3,"file":"component---src-pages-contributions-mdx-e4381efe2977560b77a6.js","mappings":"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","sources":["webpack://ibm-fusion/./src/pages/contributions.mdx","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://ibm-fusion/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/benrandall/Documents/Code/ibm-fusion/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/* Page title left out so it can be generated */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use this guide to contribute to the theme. We’ll show you how to get the\ndevelopment environment set up as quickly as possible so you can start\ncontributing.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Project setup</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Development</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Work in a branch</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Sass and CSS Modules</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">VS Code</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Test pages</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Publishing</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Project setup`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Go to\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon\"\n          }}>{`gatsby-theme-carbon`}</a>{`\nand click the `}<inlineCode parentName=\"p\">{`Fork`}</inlineCode>{` button in the top-right corner.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After it’s finished, click on the `}<inlineCode parentName=\"p\">{`Clone or Download`}</inlineCode>{` button and copy the\ncontents.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your terminal, clone the repo into your directory of choice`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git clone [PASTE_URL_HERE]\ncd gatsby-theme-carbon\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`When you clone your forked repo the `}<inlineCode parentName=\"li\">{`origin`}</inlineCode>{` is set to your fork by default.\nYou’ll want to add a remote that points to the upstream repo.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git remote add upstream git@github.com:carbon-design-system/gatsby-theme-carbon.git\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`In your terminal, verify that the remotes have been set`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git remote -v\n`}</code></pre>\n    <h2>{`Development`}</h2>\n    <p>{`We use `}<a parentName=\"p\" {...{\n        \"href\": \"https://yarnpkg.com/lang/en/docs/install/\"\n      }}>{`yarn`}</a>{` and yarn workspaces to\ndevelop the Carbon Gatsby theme. This allows us to have a development\nenvironment that’s closely linked to the theme with minimal setup. Run\n`}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{` to install all of the projects dependencies.`}</p>\n    <p>{`This project has two packages: the actual theme package (`}<inlineCode parentName=\"p\">{`gatsby-theme-carbon`}</inlineCode>{`)\nand the `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{` package. The example package emulates a project which uses the\ntheme. Its only dependencies are Gatsby, React, and the adjacent theme package.\nThe `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{` package also serves as the theme’s documentation and\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://gatsby-theme-carbon.now.sh\"\n      }}>{`website`}</a>{`; it’s deployed on every merge to\nmain.`}</p>\n    <p>{`New theme development will happen in the theme package while documentation and\ntesting of that change will occur through changes in the example directory.`}</p>\n    <h3>{`Development scripts`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn dev`}</inlineCode>{` – start the development environment`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn dev:clean`}</inlineCode>{` – clear cache and restart dev`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn format`}</inlineCode>{` – format your code with prettier`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn lint`}</inlineCode>{` - check for errors in your javascript`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn test:prefix`}</inlineCode>{` – build and serve with a path prefix`}</li>\n    </ul>\n    <h2>{`Work in a branch`}</h2>\n    <p>{`You should always start a new project by pulling upstream changes into main and\nthen creating a new branch. This workflow ensures you don’t accidentally commit\nanything to your main branch and get stuck when trying to open a pull request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git checkout main\ngit pull upstream main\ngit checkout -b my-branch-name\n`}</code></pre>\n    <h3>{`Commit messages`}</h3>\n    <p>{`For commit messages we use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://gist.github.com/stephenparish/9941e89d80e2bc58a153#allowed-type\"\n      }}>{`Angular commit conventions`}</a>{`\nto dictate whether a commit is for a feature, fix, docs, etc. You need to prefix\nyour commits with one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`feat (feature)`}</li>\n      <li parentName=\"ul\">{`fix (bug fix)`}</li>\n      <li parentName=\"ul\">{`docs (documentation)`}</li>\n      <li parentName=\"ul\">{`style (formatting, missing semi colons, …)`}</li>\n      <li parentName=\"ul\">{`refactor`}</li>\n      <li parentName=\"ul\">{`test (when adding missing tests)`}</li>\n      <li parentName=\"ul\">{`chore (maintain)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git commit -m \"chore: this is a test commit message\"\n`}</code></pre>\n    <h3>{`Opening a Pull request`}</h3>\n    <p>{`When you’re ready to open a pull request, push to your origin remote.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`git push origin my-branch-name\n`}</code></pre>\n    <p>{`You’ll get a message in your terminal with a URL to open up a pull request in\nthe upstream repository. Navigate to that URL and be sure to give a detailed\nsummary of your pull request in the title and body section of the form.`}</p>\n    <h2>{`Sass and CSS Modules`}</h2>\n    <p>{`For internal theme components we use\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://sass-lang.com/documentation/syntax\"\n      }}>{`Sass`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/css-modules/css-modules#css-modules\"\n      }}>{`CSS Modules`}</a>{`. This\nallows us to take advantage of the Carbon Design System resources while not\nworrying about className collisions. By default, each `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` file will be\nsupplied with all of the Carbon Sass\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon/blob/main/packages/components/src/globals/scss/_vars.scss\"\n      }}>{`variables`}</a>{`:\ncolor, spacing, theme, and motion, as well as type and layout mixins, are\nimported automatically.`}</p>\n    <p>{`You should colocate your stylesheet with the component(s) that import it. If the\ncomponent is `}<inlineCode parentName=\"p\">{`TreeView`}</inlineCode>{` then the stylesheet should be `}<inlineCode parentName=\"p\">{`TreeView.module.scss`}</inlineCode>{`.\nAll contained within the `}<inlineCode parentName=\"p\">{`TreeView`}</inlineCode>{` directory.`}</p>\n    <h3>{`CSS Modules`}</h3>\n    <p>{`You don’t need to prefix your classes as CSS Modules will generate unique class\nnames for you. Import the class from the `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\",\n        \"metastring\": \"path=TreeView.module.scss\",\n        \"path\": \"TreeView.module.scss\"\n      }}>{`.treeView {\n  color: $text-01;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\"\n      }}>{`import { treeView } from './style.css';\n\nconst TreeView = (props) => <div className={treeView} />;\n`}</code></pre>\n    <p>{`For conditionally applying class names, use the `}<inlineCode parentName=\"p\">{`classname`}</inlineCode>{` library. Note how\nwe’re using a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://tylermcginnis.com/computed-property-names/\"\n      }}>{`computed property name`}</a>{` for\nthe property being based to `}<inlineCode parentName=\"p\">{`cx`}</inlineCode>{`. That’s because the className isn’t literally\n`}<inlineCode parentName=\"p\">{`\"long\"`}</inlineCode>{` it’s a value generated by CSS Modules and placed in the `}<inlineCode parentName=\"p\">{`long`}</inlineCode>{`\nvariable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\"\n      }}>{`import cx from 'classname';\nimport { treeView, long } from './style.css';\n\nconst TreeView = (props) => {\n  const className = cx(treeView, {\n    [long]: props.long,\n  });\n  const TreeView = (props) => <div className={className} />;\n};\n`}</code></pre>\n    <p>{`If you need to target a global class not processed by CSS Modules, you can do so\nwith the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/css-modules/css-modules#exceptions\"\n      }}>{`global selector`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`:global(.bx--grid) .codeBlock {\n  @include carbon--type-style('code-01');\n}\n`}</code></pre>\n    <h2>{`VS Code`}</h2>\n    <p>{`To get linting error feedback while writing javascript and SCSS in VS Code,\ninstall the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\"\n      }}>{`stylelint`}</a>{`\nand\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\"\n      }}>{`ESlint`}</a>{`\nextensions. We use ESLint’s Prettier rules to format and lint all of our\nJavaScript in one pass. To get your code to format properly on save, add the\nfollowing to a `}<inlineCode parentName=\"p\">{`.vscode/settings.json`}</inlineCode>{` in the root of your project`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/settings.json\",\n        \"path\": \".vscode/settings.json\"\n      }}>{`{\n  \"editor.formatOnSave\": true,\n  \"[javascript]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"[javascriptreact]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"eslint.autoFixOnSave\": true,\n  \"prettier.disableLanguages\": [\"javascript\", \"javascriptreact\"]\n}\n`}</code></pre>\n    <p>{`To lint the entire project and get errors in your `}<inlineCode parentName=\"p\">{`Problems`}</inlineCode>{` tray, you can add\nthe following to a `}<inlineCode parentName=\"p\">{`.vscode/tasks.json`}</inlineCode>{` file in the root of your project. You\ncan run these tasks with `}<inlineCode parentName=\"p\">{`cmd+shift+d`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/tasks.json\",\n        \"path\": \".vscode/tasks.json\"\n      }}>{`{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:js\",\n      \"problemMatcher\": \"$eslint-stylish\"\n    },\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:scss\",\n      \"problemMatcher\": {\n        \"owner\": \"stylelint\",\n        \"fileLocation\": [\"relative\", \"\\${workspaceFolder}\"],\n        \"pattern\": [\n          {\n            \"regexp\": \"^([^\\\\\\\\s].*)$\",\n            \"file\": 1\n          },\n          {\n            \"regexp\": \"^\\\\\\\\s+(\\\\\\\\d+):(\\\\\\\\d+)\\\\\\\\s+(✖|warning)\\\\\\\\s+(.*)\\\\\\\\s\\\\\\\\s+(.*)$\",\n            \"line\": 1,\n            \"column\": 2,\n            \"severity\": 3,\n            \"message\": 4,\n            \"code\": 5,\n            \"loop\": true\n          }\n        ]\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <h2>{`Test pages`}</h2>\n    <p>{`If you want to add examples of what you are working on or see changes you’ve\nmade, you can add an MDX file to `}<inlineCode parentName=\"p\">{`packages/src/pages/test`}</inlineCode>{` that will be visible\nat `}<inlineCode parentName=\"p\">{`(your-server-name)/test/(added-file)`}</inlineCode>{` during development. If you do add a\npage to the `}<inlineCode parentName=\"p\">{`/test`}</inlineCode>{` directory, update the below list with the file you added and\nits purpose to be included with your pull request.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/ProjectAbell/webpage/test/spacing-audit\"\n        }}><inlineCode parentName=\"a\">{`Spacing audit`}</inlineCode></a>{`: use this page to test spacing around\ncomponents when combined in common patterns.`}</li>\n    </ul>\n    <h2>{`Publishing`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Pull the latest from the main branch, usually by running\n`}<inlineCode parentName=\"li\">{`git pull upstream main`}</inlineCode>{` on your local machine.`}</li>\n      <li parentName=\"ol\">{`From the root of the package run `}<inlineCode parentName=\"li\">{`yarn release`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Follow the prompts accordingly.`}</li>\n      <li parentName=\"ol\">{`In the project’s\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/releases\"\n        }}>{`release tab`}</a>{`,\nedit the new release to include a summary of new changes.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","isMDXComponent","title","theme","tabs","React","className","cx","length","id","relativePagePath","repository","repositoryProp","site","siteMetadata","useStaticQuery","baseUrl","subDirectory","branch","href","PageTabs","_React$Component","apply","arguments","_inheritsLoose","prototype","render","slug","this","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","date","lastModified","Date","Row","Column","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}