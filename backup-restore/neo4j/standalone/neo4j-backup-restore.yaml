apiVersion: spp-data-protection.isf.ibm.com/v1alpha1
kind: Recipe
metadata:
  name: neo4j_backup_restore_recipe
  namespace: ibm-spectrum-fusion-ns
spec:
  appType: neo4j
  groups:
    - name: neo4j_volumes
      type: volume
    - name: neo4j_resources
      type: resource
      includedResourceTypes:
        - deployments
        - services
        - configmaps
  hooks:
  - name: neo4j_deployment_check
    type: check
    namespace: ${GROUP.neo4j_resources.namespace}
    selectResource: deployment
    labelSelector: app=neo4j
    timeout: 120
    onError: fail
    chks:
    - name: replicasReady
      timeout: 600
      onError: fail
      condition: "{$.spec.replicas} == {$.status.readyReplicas}"
  - name: neo4j_pod_exec
    type: exec
    namespace: ${GROUP.neo4j_resources.namespace}
    labelSelector: app=neo4j
    timeout: 120
    onError: fail
    ops:
    - name: disable_write
      command: "PASSWORD=$(echo $NEO4J_AUTH | awk -F'/' '{print $2}'); cypher-shell -u neo4j -p $PASSWORD \"CALL dbms.setConfigValue('server.databases.default_to_read_only', 'true');\""
      container: neo4j
      timeout: 120 
    - name: enable_write
      command: "PASSWORD=$(echo $NEO4J_AUTH | awk -F'/' '{print $2}'); cypher-shell -u neo4j -p $PASSWORD \"CALL dbms.setConfigValue('server.databases.default_to_read_only', 'false');\""
      container: neo4j
      timeout: 120          
  workflows:
  - name: backup
    sequence:
    - group: neo4j_resources
    - hook: neo4j_pod_exec/disable_write
    - group: neo4j_volumes
    - hook: neo4j_pod_exec/enable_write
  - name: restore
    sequence:
    - group: neo4j_volumes
    - group: neo4j_resources
