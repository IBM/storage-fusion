apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ocs-storagecluster-cephfs    
  volumeMode: Filesystem      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data   
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379

--- 

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sample-ingress
spec:
  rules:
  - host: example.com  # Replace with your desired hostname
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: sample-app
            port:
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-configmap
data:
  # Define your configuration data here
  key1: value1              

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sample-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec", "pods/log"]
  verbs: ["get", "list", "watch", "create", "delete", "update"]

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-serviceaccount
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sample-rolebinding
subjects:
- kind: ServiceAccount
  name: sample-serviceaccount
roleRef:
  kind: Role
  name: sample-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
metadata:
  name: sample-secret
type: Opaque
data:
  username: bmFtZQo=
  password: bmFtZQo=

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: sample-route
spec:
  host: example.com
  to:
    kind: Service
    name: redis
    weight: 100
  port:
    targetPort: 8080
  wildcardPolicy: None

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ocs-storagecluster-cephfs    
  volumeMode: Filesystem     
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-1-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ocs-storagecluster-cephfs    
  volumeMode: Filesystem     