apiVersion: spp-data-protection.isf.ibm.com/v1alpha1
kind: Recipe
metadata:
  name: db2u-cluster-backup-restore-recipe
  namespace: ibm-spectrum-fusion-ns
spec:
  appType: db2ucluster
  groups:
  - name: db2u-volumes
    type: volume
  - name: db2u-resources
    type: resource
    excludedResourceTypes:
    - clusterserviceversions
    - subscriptions.operators.coreos.com
    - formations.db2u.databases.ibm.com
    - db2uclusters.db2u.databases.ibm.com
    - pods
    - replicasets
    - statefulsets
  - name: db2u-operatorgroups
    type: resource
    includedResourceTypes:
    - operatorgroups
  - name: db2u-subscriptions
    type: resource
    includedResourceTypes:
    - subscriptions.operators.coreos.com
  - name: db2u-db2uclusters
    type: resource
    includedResourceTypes:
    - db2uclusters.db2u.databases.ibm.com
  hooks:
  - name: db2u-operator-check
    labelSelector: olm.owner.kind=ClusterServiceVersion
    namespace: ${GROUP.db2u-volumes.namespace}
    selectResource: deployment
    timeout: 120
    type: check
    chks:
    - condition: '{$.spec.replicas} == {$.status.readyReplicas}'
      name: replicasReady
      onError: fail
      timeout: 600
    onError: fail
  - name: db2uclusters-check
    labelSelector: for-backup=true
    namespace: ${GROUP.db2u-volumes.namespace}
    selectResource: db2u.databases.ibm.com/v1/db2uclusters
    timeout: 800
    type: check
    chks:
    - condition: '{$.status.state} == {"Ready"}'
      name: stateReady
      onError: fail
      timeout: 900
    onError: fail
  - name: db2uclusters-pod-exec
    namespace: ${GROUP.db2u-volumes.namespace}
    labelSelector: name=dashmpp-head-0
    selectResource: pod
    timeout: 300
    type: exec
    ops:
    - command: |
        ["/bin/bash", "-c", "manage_snapshots --action suspend --retry 3"]
      container: db2u
      name: suspend
    - command: |
        ["/bin/bash", "-c", "manage_snapshots --action resume --retry 3"]
      container: db2u
      name: resume
    - command: |
        ["/bin/bash", "-c", "manage_snapshots --action restore --retry 3"]
      container: db2u
      name: restore
      timeout: 300
    onError: fail
  - name: db2u-operator-manager-exec
    namespace: ${GROUP.db2u-volumes.namespace}
    labelSelector: control-plane=db2u-operator-manager
    selectResource: pod
    timeout: 120
    type: exec
    onError: fail
    ops:
    - command: |
        ["/bin/bash", "-c", "db2uclusters=$(curl -X GET --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H \"Authorization: Bearer `cat /var/run/secrets/kubernetes.io/serviceaccount/token`\" -H 'Accept: application/yaml' -k https://kubernetes.default.svc/apis/db2u.databases.ibm.com/v1/namespaces/${GROUP.db2u-volumes.namespace}/db2uclusters | grep '^    name: ' | tr -d ' ' | cut -c 6-); for db2ucluster in $db2uclusters; do curl -X PATCH --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H \"Authorization: Bearer `cat /var/run/secrets/kubernetes.io/serviceaccount/token`\" -H 'Content-Type: application/merge-patch+json' -H 'Accept: application/json' -k https://kubernetes.default.svc/apis/db2u.databases.ibm.com/v1/namespaces/${GROUP.db2u-volumes.namespace}/db2uclusters/$db2ucluster?fieldManager=kubectl-annotate -d '{\"metadata\":{\"annotations\":{\"db2u.databases.ibm.com/maintenance-pause-reconcile\":\"true\"}}}'; done"]
      container: manager
      name: maintenance-mode-on
    - command: |
        ["/bin/bash", "-c", "db2uclusters=$(curl -X GET --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H \"Authorization: Bearer `cat /var/run/secrets/kubernetes.io/serviceaccount/token`\" -H 'Accept: application/yaml' -k https://kubernetes.default.svc/apis/db2u.databases.ibm.com/v1/namespaces/${GROUP.db2u-volumes.namespace}/db2uclusters | grep '^    name: ' | tr -d ' ' | cut -c 6-); for db2ucluster in $db2uclusters; do curl -X PATCH --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H \"Authorization: Bearer `cat /var/run/secrets/kubernetes.io/serviceaccount/token`\" -H 'Content-Type: application/merge-patch+json' -H 'Accept: application/json' -k https://kubernetes.default.svc/apis/db2u.databases.ibm.com/v1/namespaces/${GROUP.db2u-volumes.namespace}/db2uclusters/$db2ucluster?fieldManager=kubectl-annotate -d '{\"metadata\":{\"annotations\":{\"db2u.databases.ibm.com/maintenance-pause-reconcile\":null}}}'; done"]
      container: manager
      name: maintenance-mode-off
    - command: |
        ["/bin/bash", "-c", "sleep 300"]
      container: manager
      name: sleep-5-minutes
      timeout: 600
  workflows:
  - failOn: any-error
    name: backup
    sequence:
    - hook: db2u-operator-manager-exec/maintenance-mode-on
    - group: db2u-resources
    - group: db2u-operatorgroups
    - group: db2u-subscriptions
    - group: db2u-db2uclusters
    - hook: db2uclusters-pod-exec/suspend
    - group: db2u-volumes
    - hook: db2uclusters-pod-exec/resume
    - hook: db2u-operator-manager-exec/maintenance-mode-off
  - failOn: any-error
    name: restore
    sequence:
    - group: db2u-operatorgroups
    - group: db2u-subscriptions
    - group: db2u-volumes
    - hook: db2u-operator-check/replicasReady
    - group: db2u-resources
    - hook: db2u-operator-manager-exec/sleep-5-minutes
    - group: db2u-db2uclusters
    - hook: db2u-operator-manager-exec/maintenance-mode-off
    - hook: db2uclusters-check/stateReady
    - hook: db2uclusters-pod-exec/restore
