#!/usr/bin/env bash
# description: Show node components versions such as kubelet, crio, kernel, etc.

[ -z ${UTILSFILE} ] && source "$(dirname ${0})/../utils"

if oc auth can-i get nodes -A >/dev/null 2>&1; then
  KUBELETVERSIONS=$( (echo -e "NODE\tKUBELET"; oc get nodes -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.nodeInfo.kubeletVersion}{"\n"}{end}') | column -t)
  CRIOVERSIONS=$( (echo -e "NODE\tCRIO"; oc get nodes -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.nodeInfo.containerRuntimeVersion}{"\n"}{end}') | column -t)
  KERNELVERSIONS=$( (echo -e "NODE\tKERNEL"; oc get nodes -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.nodeInfo.kernelVersion}{"\n"}{end}') | column -t)
  OSIMAGEVERSIONS=$( (echo -e "NODE:OSIMAGE"; oc get nodes -o jsonpath='{range .items[*]}{.metadata.name}{":"}{.status.nodeInfo.osImage}{"\n"}{end}') | column -t -s ":")

  msg "KUBELET VERSIONS:\n${KUBELETVERSIONS}"
  msg "CRIO VERSIONS:\n${CRIOVERSIONS}"
  msg "KERNEL VERSIONS:\n${KERNELVERSIONS}"
  msg "OS IMAGE VERSIONS:\n${OSIMAGEVERSIONS}"
  
  exit ${OCINFO}
else
  msg "Couldn't get nodes, check permissions"
  exit ${OCSKIP}
fi
exit ${OCUNKNOWN}