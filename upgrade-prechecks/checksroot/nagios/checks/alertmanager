#!/usr/bin/env bash
# description: Checks if there are warning or error alerts firing
# kb: https://access.redhat.com/solutions/4250221

[ -z "${UTILSFILE}" ] && source "$(dirname "${0}")/../utils"

if oc auth can-i get routes -n openshift-monitoring >/dev/null 2>&1; then
  alert_url=$(oc -n openshift-monitoring get routes/alertmanager-main -o json | jq -r .spec.host)

  if [ -z "${alert_url}" ]; then
    msg "${RED}Alertmanager route URL not found${NOCOLOR}"
    exit ${OCUNKNOWN}
  fi

  token=$(oc -n openshift-monitoring sa get-token prometheus-k8s 2>/dev/null)
  
  if [ -z "${token}" ]; then
    msg "${RED}Failed to retrieve service account token for prometheus-k8s${NOCOLOR}"
    exit ${OCUNKNOWN}
  fi

  raw_alerts=$(curl -s -k -H "Authorization: Bearer ${token}" "https://${alert_url}/api/v2/alerts")

  if [ $? -eq 35 ]; then
    # Error code 35 might mean an issue with a proxy server
    raw_alerts=$(curl --noproxy '*' -s -k -H "Authorization: Bearer ${token}" "https://${alert_url}/api/v2/alerts")
  fi

  if [ -z "${raw_alerts}" ]; then
    msg "${RED}Failed to retrieve alerts or empty response${NOCOLOR}"
    exit ${OCUNKNOWN}
  fi

  alerts=$(echo "${raw_alerts}" | jq '.alerts[] | {alert:.labels.alertname, severity:.labels.severity, namespace:.labels.namespace, instance:.labels.instance, message:(.annotations.message // .annotations.summary)} | select((.severity == "warning") or (.severity == "critical"))')

  if [ -z "${alerts}" ]; then
    msg "No critical or warning alerts found."
    exit ${OCOK}
  else
    ALERTS=$(echo "${alerts}" | jq -r '. | "\(.severity)\t\(.alert)\t\(.namespace)\t\(.instance)\t\(.message)"' | column -t -s $'\t' -N "SEVERITY,ALERT,NAMESPACE,INSTANCE,MESSAGE")
    msg "Alerts currently firing:\n${RED}${ALERTS}${NOCOLOR}\n"
    errors=$((errors + 1))
    if [ -n "${ERRORFILE}" ]; then
      echo "${errors}" > "${ERRORFILE}"
    fi
    exit ${OCERROR}
  fi
else
  msg "Couldn't get routes, check permissions"
  exit ${OCSKIP}
fi
exit ${OCUNKNOWN}
